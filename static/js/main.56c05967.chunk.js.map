{"version":3,"sources":["types/SelectedOption.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["SelectedOption","TodoList","visibleTodos","handleUserId","handleTodo","selectedTodo","className","map","todo","cn","id","completed","title","type","onClick","userId","TodoFilter","todos","onChange","useState","query","setQuery","All","selectedOption","setSelectedOption","useEffect","filter","toLowerCase","includes","filterTodos","Active","Completed","Error","selectTodos","event","target","value","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","user","setUser","loading","setLoading","getUser","finally","href","name","App","setUserId","setSelectedTodo","setTodos","setVisibleTodos","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56c05967.chunk.js","sourcesContent":["export enum SelectedOption {\n  Active = 'active',\n  Completed = 'completed',\n  All = 'all',\n}\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  visibleTodos: Todo[];\n  handleUserId: React.Dispatch<React.SetStateAction<number | null>>;\n  handleTodo: React.Dispatch<React.SetStateAction<Todo | null>>;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  visibleTodos,\n  handleUserId,\n  handleTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={cn((selectedTodo?.id === todo.id)\n              && 'has-background-info-light')}\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n\n            <td className=\"is-vcentered\">\n              {todo.completed\n                && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  handleUserId(todo.userId);\n                  handleTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', (selectedTodo?.id === todo.id)\n                    ? 'fa-eye-slash'\n                    : 'fa-eye')}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { SelectedOption } from '../../types/SelectedOption';\n\ntype Props = {\n  todos: Todo[];\n  onChange: React.Dispatch<React.SetStateAction<Todo[]>>;\n  visibleTodos: Todo[];\n};\n\nfunction selectTodos(selectedOption: string, todo: Todo) {\n  switch (selectedOption) {\n    case SelectedOption.Active:\n      return !todo.completed;\n\n    case SelectedOption.Completed:\n      return todo.completed;\n\n    case SelectedOption.All:\n      return true;\n\n    default:\n      throw new Error('Impossible value');\n  }\n}\n\nfunction filterTodos(query: string, todo: Todo) {\n  return todo.title.toLowerCase().includes(query.toLowerCase());\n}\n\nexport const TodoFilter: React.FC<Props> = ({ todos, onChange }) => {\n  const [query, setQuery] = useState('');\n  const [\n    selectedOption,\n    setSelectedOption,\n  ] = useState<SelectedOption>(SelectedOption.All);\n\n  useEffect(() => {\n    onChange(todos\n      .filter(todo => filterTodos(query, todo))\n      .filter(todo => selectTodos(selectedOption, todo)));\n  }, [query, selectedOption]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={\n              event => setSelectedOption(event.target.value as SelectedOption)\n            }\n          >\n            <option value={SelectedOption.All}>All</option>\n\n            <option value={SelectedOption.Active}>Active</option>\n\n            <option value={SelectedOption.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {(query.length > 0) && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  userId: number | null;\n  handleUserId: React.Dispatch<React.SetStateAction<number | null>>;\n  todo: Todo | null;\n  handleTodo: React.Dispatch<React.SetStateAction<Todo | null>>;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  userId,\n  handleUserId,\n  todo,\n  handleTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (userId) {\n      setLoading(true);\n\n      getUser(userId)\n        .then(setUser)\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  }, [userId]);\n\n  return (\n    (loading || user) && (\n      <div\n        className={cn('modal', 'is-active')}\n        data-cy=\"modal\"\n      >\n        <div className=\"modal-background\" />\n\n        {(loading) ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                Todo #\n                {todo?.id}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  setUser(null);\n                  handleUserId(null);\n                  handleTodo(null);\n                }}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong className={cn(todo?.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger')}\n                >\n                  {todo?.completed ? 'Done' : 'Planned'}\n                </strong>\n\n                {' by '}\n\n                <a href=\"mailto:Sincere@april.biz\">\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [userId, setUserId] = useState<number | null>(null);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(data => {\n        setTodos(data);\n        setVisibleTodos(data);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                onChange={setVisibleTodos}\n                visibleTodos={visibleTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n\n              <TodoList\n                visibleTodos={visibleTodos}\n                handleUserId={setUserId}\n                handleTodo={setSelectedTodo}\n                selectedTodo={selectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <TodoModal\n        userId={userId}\n        handleUserId={setUserId}\n        todo={selectedTodo}\n        handleTodo={setSelectedTodo}\n      />\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}